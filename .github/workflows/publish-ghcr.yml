name: 'Github Publish Docker'
on:
  release:
    types: [published]
  # Allow deployment manually
  workflow_dispatch:
    inputs:
      image_tag_prefix:
        description: 'Image Tag Prefix (prod or staging)'
        required: true
        default: 'staging'
env:
  REDWOOD_API_URL: 'http://0.0.0.0:8911'
  APP_DOMAIN: 'http://0.0.0.0:8910'

  # Container Registry
  CONTAINER_REGISTRY_HOSTNAME: ghcr.io
  CONTAINER_REGISTRY_USERNAME: ${{ github.actor }}
  CONTAINER_REGISTRY_PASSWORD: ${{ secrets.GITHUB_TOKEN }}

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-20.04
    outputs:
      RELEASE_HTML_URL: ${{ steps.get_release.outputs.html_url }}
      BRANCH: ${{ steps.get_variables.outputs.VERSION }}
      NODE_ENV: ${{ steps.get_variables.outputs.NODE_ENV }}
      VERSION: ${{ steps.get_version.outputs.VERSION }}
    steps:
      - name: Get release
        id: get_release
        uses: bruceadams/get-release@v1.2.3
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: Get variables
        id: get_variables
        run: |
          NODE_ENV=staging
          BRANCH=staging
          if [ ${{ github.event.inputs.image_tag_prefix }} ] ; then
             NODE_ENV=${{ github.event.inputs.image_tag_prefix }}
             BRANCH=${{ github.ref_name }}
          elif ! grep -q "staging" <<< "${{ steps.get_release.outputs.tag_name }}" ; then
             NODE_ENV=prod
             BRANCH=main
          fi
          echo "::set-output name=BRANCH::$BRANCH"
          echo "::set-output name=NODE_ENV::$NODE_ENV"
      - name: Checkout branch
        uses: actions/checkout@v2
        with:
          ref: ${{ steps.get_variables.outputs.BRANCH }}
      - name: Get version
        id: get_version
        run: |
          if [ ${{ github.event.inputs.image_tag_prefix }} ] ;  then
            if [ $github.ref_name == "main" ] ; then
               npx lerna version --conventional-graduate --conventional-commits --yes
            else
               npx lerna version prerelease --yes --preid staging
            fi
          fi
          VERSION=`jq -r .version lerna.json`
          echo "::set-output name=VERSION::v$VERSION"
      - name: Discord notify building
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_DEVOPS }}
        uses: Ilshidur/action-discord@0c4b27844ba47cb1c7bee539c8eead5284ce9fa9
        with:
          args: 🏭 Build in progress... `${{ steps.get_version.outputs.VERSION }}`
  build:
    name: Build and Deploy
    runs-on: ubuntu-20.04
    needs: setup
    timeout-minutes: 10
    strategy:
      fail-fast: true
      matrix:
        platform: [api, web]
    steps:
      - name: Checkout branch
        uses: actions/checkout@v2
        with:
          ref: ${{ needs.setup.outputs.BRANCH }}
      - name: Setup Docker
        uses: docker/setup-buildx-action@v1
      - name: Docker login
        uses: docker/login-action@v1
        with:
          registry: ${{ env.CONTAINER_REGISTRY_HOSTNAME }}
          username: ${{ env.CONTAINER_REGISTRY_USERNAME }}
          password: ${{ env.CONTAINER_REGISTRY_PASSWORD }}
      - name: Docker build
        uses: docker/build-push-action@v2
        with:
          push: true
          context: .
          file: ./${{ matrix.platform }}/Dockerfile
          build-args: |
            NODE_ENV=${{ needs.setup.outputs.NODE_ENV }}
            REDWOOD_API_URL=${{ env.REDWOOD_API_URL }}
            APP_DOMAIN=${{ env.APP_DOMAIN }}
          tags: |
            ${{ env.CONTAINER_REGISTRY_HOSTNAME }}/${{ github.repository }}-${{ matrix.platform }}:latest
            ${{ env.CONTAINER_REGISTRY_HOSTNAME }}/${{ github.repository }}-${{ matrix.platform }}:${{ needs.setup.outputs.VERSION }}
  notify:
    name: Notify
    runs-on: ubuntu-20.04
    needs:
      - build
      - setup
    steps:
      - name: Discord notify complete
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_DEVOPS }}
        uses: Ilshidur/action-discord@0c4b27844ba47cb1c7bee539c8eead5284ce9fa9
        with:
          args: |
            🚢 Shipped! ${{ needs.setup.outputs.RELEASE_HTML_URL }}
